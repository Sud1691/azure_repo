resource "null_resource" "wait_for_eni_cleanup" {
  count = var.wait_for_eni_cleanup && var.vpc_config != null ? 1 : 0

  triggers = {
    canary_name = aws_synthetics_canary.this.name
  }

  provisioner "local-exec" {
    when    = destroy
    command = "bash ${path.module}/wait_for_eni_cleanup.sh ${aws_synthetics_canary.this.name}"
  }

  depends_on = [aws_synthetics_canary.this]
}


#!/bin/bash

set -euo pipefail

SG_ID="$1"
REGION=$(aws configure get region || echo "us-east-1")

echo "Looking for ENIs with Security Group ID: $SG_ID in $REGION"

MAX_ATTEMPTS=120
SLEEP_INTERVAL=10

for ((i=1; i<=MAX_ATTEMPTS; i++)); do
  ENI_IDS=$(aws ec2 describe-network-interfaces \
    --region "$REGION" \
    --filters Name=group-id,Values="$SG_ID" \
    --query "NetworkInterfaces[?Status!='available'].NetworkInterfaceId" \
    --output text)

  if [[ -z "$ENI_IDS" ]]; then
    echo "$(date '+%T') ‚úÖ All ENIs are in 'available' state or already deleted."
    break
  else
    echo "$(date '+%T') ‚è≥ Attempt $i/$MAX_ATTEMPTS: Waiting for ENIs to be available. Still in-use: $ENI_IDS"
    sleep "$SLEEP_INTERVAL"
  fi
done

# Now delete available ENIs associated with the SG
AVAILABLE_ENIS=$(aws ec2 describe-network-interfaces \
  --region "$REGION" \
  --filters Name=group-id,Values="$SG_ID" Name=status,Values=available \
  --query "NetworkInterfaces[].NetworkInterfaceId" \
  --output text)

for eni in $AVAILABLE_ENIS; do
  echo "$(date '+%T') üî• Deleting ENI: $eni"
  aws ec2 delete-network-interface --network-interface-id "$eni" --region "$REGION"
done

echo "‚úÖ Done: All ENIs deleted or in available state."


====================


#!/bin/bash

# ==========================================
# ENI Cleanup Script for AWS Security Group
# ==========================================

# Usage:
#   ./eni_cleanup.sh <security_group_name>
#   Example:
#     ./eni_cleanup.sh my-sg-name

# ------------------------------------------
# Config
SECURITY_GROUP_NAME="$1"                 # Security group name to filter ENIs
REGION="${AWS_REGION:-us-east-1}"        # AWS region (default to us-east-1)

# ------------------------------------------
# Validate inputs
if [ -z "$SECURITY_GROUP_NAME" ]; then
  echo "‚ùå Error: Security Group Name is required!"
  exit 1
fi

# ------------------------------------------
# 1. Get Security Group ID
SG_ID=$(aws ec2 describe-security-groups \
  --filters "Name=group-name,Values=$SECURITY_GROUP_NAME" \
  --region "$REGION" \
  --query 'SecurityGroups[0].GroupId' \
  --output text)

if [ "$SG_ID" == "None" ] || [ -z "$SG_ID" ]; then
  echo "‚ùå Error: Security Group '$SECURITY_GROUP_NAME' not found in region '$REGION'."
  exit 1
fi

echo "‚úÖ Found Security Group ID: $SG_ID"

# ------------------------------------------
# 2. List associated ENIs
ENI_IDS=$(aws ec2 describe-network-interfaces \
  --filters "Name=group-id,Values=$SG_ID" \
  --region "$REGION" \
  --query 'NetworkInterfaces[*].NetworkInterfaceId' \
  --output text)

if [[ -z "$ENI_IDS" ]]; then
  echo "‚úÖ No ENIs found associated with the given security group. Exiting."
  exit 0
fi

echo "üîé Found the following ENIs:"
echo "$ENI_IDS"

# ------------------------------------------
# 3. Delete ENIs
for ENI_ID in $ENI_IDS; do
  echo "‚õî Deleting ENI: $ENI_ID..."
  aws ec2 delete-network-interface --network-interface-id "$ENI_ID" --region "$REGION"

  if [ $? -eq 0 ]; then
    echo "‚úÖ Successfully triggered delete for ENI: $ENI_ID"
  else
    echo "‚ùå Failed to delete ENI: $ENI_ID (maybe it's still attached)"
  fi
done

# ------------------------------------------
# 4. Wait for ENIs to fully disappear
echo "‚è≥ Waiting for ENIs to be completely deleted..."
for i in {1..30}; do
  REMAINING_ENIS=$(aws ec2 describe-network-interfaces \
    --filters "Name=group-id,Values=$SG_ID" \
    --region "$REGION" \
    --query 'NetworkInterfaces[*].NetworkInterfaceId' \
    --output text)

  if [[ -z "$REMAINING_ENIS" ]]; then
    echo "‚úÖ All ENIs deleted successfully."
    exit 0
  else
    echo "‚è±Ô∏è  ENIs still present: $REMAINING_ENIS. Sleeping for 10s..."
    sleep 10
  fi
done

echo "‚ùå Timeout waiting for ENIs to be deleted."
exit 1

