import os
import socket
import boto3

# Initialize the SNS client
sns = boto3.client('sns')

def lambda_handler(event, context):
    domains = os.environ.get("TARGET_DOMAINS", "")
    if not domains:
        print("No domains provided in TARGET_DOMAINS environment variable.")
        return

    domain_list = [d.strip() for d in domains.split(",") if d.strip()]
    topic_arn = os.environ.get('SNS_TOPIC_ARN', '')

    for domain in domain_list:
        try:
            resolved_ip = socket.gethostbyname(domain)
            message = f"{domain} resolved to {resolved_ip}"
            print(message)
            if topic_arn:
                sns.publish(
                    TopicArn=topic_arn,
                    Subject="DNS Resolution Notification",
                    Message=message
                )
        except Exception as e:
            error_msg = f"ERROR: Could not resolve {domain}: {str(e)}"
            print(error_msg)
            if topic_arn:
                sns.publish(
                    TopicArn=topic_arn,
                    Subject="DNS Resolution Error",
                    Message=error_msg
                )

# Local test
if __name__ == "__main__":
    os.environ["TARGET_DOMAINS"] = "example.com,google.com"
    # os.environ["SNS_TOPIC_ARN"] = "arn:aws:sns:region:account-id:topic-name"  # optional
    from types import SimpleNamespace
    lambda_handler({}, SimpleNamespace())
